{"ast":null,"code":"var _jsxFileName = \"/Users/zhangmin/Documents/GitHub/CombatIQ/frontend/src/pages/trends/TrendsBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, ReactNode, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Center, Flex, Heading, HStack, Text, useRadioGroup, VStack } from \"@chakra-ui/react\";\nimport MultiLine from \"../../components/visualisations/MultiLine\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport RadioCard from \"../../components/radio/RadioCard\";\nimport SpeedData from \"../../dummy_data/training/speed.json\";\nimport PowerData from \"../../dummy_data/training/power.json\";\nimport AccuracyData from \"../../dummy_data/accuracy.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrendsBox = props => {\n  _s();\n  // Window size for graph size\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  function getWindowSize() {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  // For radio\n  const [tabIndex, setTabIndex] = useState(props.options[0]);\n  const options = props.options;\n  const data = props.data;\n  const xAxisTitles = props.xAxisTitles;\n  const yAxisTitles = props.yAxisTitles;\n  const {\n    getRootProps,\n    getRadioProps\n  } = useRadioGroup({\n    name: 'framework',\n    defaultValue: props.options[0],\n    onChange: setTabIndex\n  });\n  const group = getRootProps();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    pt: \"2vh\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      pt: \"0px\",\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        alignItems: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(VStack, {\n          ...group,\n          pl: \"1vw\",\n          pr: \"30px\",\n          pt: \"70px\",\n          children: options.map(value => {\n            const radio = getRadioProps({\n              value\n            });\n            return /*#__PURE__*/_jsxDEV(RadioCard, {\n              p: '0px',\n              width: '180px',\n              ...radio,\n              children: /*#__PURE__*/_jsxDEV(Center, {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), options.map((value, index) => {\n          return value === tabIndex && /*#__PURE__*/_jsxDEV(MultiLine, {\n            data: data[index],\n            height: 0.75 * windowSize.innerHeight,\n            width: 0.75 * windowSize.innerWidth,\n            min: 15,\n            xAxisTitle: xAxisTitles[index],\n            yAxisTitle: yAxisTitles[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(TrendsBox, \"aR3tqdcCjT+eumLpEaFgBxcQMr4=\", false, function () {\n  return [useRadioGroup];\n});\n_c = TrendsBox;\nexport default TrendsBox;\nvar _c;\n$RefreshReg$(_c, \"TrendsBox\");","map":{"version":3,"names":["React","useEffect","useState","ReactNode","useRef","useLocation","Center","Flex","Heading","HStack","Text","useRadioGroup","VStack","MultiLine","Sidebar","RadioCard","SpeedData","PowerData","AccuracyData","TrendsBox","props","windowSize","setWindowSize","getWindowSize","innerWidth","innerHeight","window","handleWindowResize","addEventListener","removeEventListener","tabIndex","setTabIndex","options","data","xAxisTitles","yAxisTitles","getRootProps","getRadioProps","name","defaultValue","onChange","group","map","value","radio","index"],"sources":["/Users/zhangmin/Documents/GitHub/CombatIQ/frontend/src/pages/trends/TrendsBox.jsx"],"sourcesContent":["import React, { useEffect, useState, ReactNode, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  Text,\n  useRadioGroup,\n  VStack,\n} from \"@chakra-ui/react\";\nimport MultiLine from \"../../components/visualisations/MultiLine\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport RadioCard from \"../../components/radio/RadioCard\";\nimport SpeedData from \"../../dummy_data/training/speed.json\";\nimport PowerData from \"../../dummy_data/training/power.json\";\nimport AccuracyData from \"../../dummy_data/accuracy.json\";\n\nconst TrendsBox = (props) => {\n    // Window size for graph size\n    const [windowSize, setWindowSize] = useState(getWindowSize());\n    function getWindowSize() {\n      const {innerWidth, innerHeight} = window;\n      return {innerWidth, innerHeight};\n    }\n    useEffect(() => {\n      function handleWindowResize() {\n        setWindowSize(getWindowSize());\n      }\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }, []);\n\n    // For radio\n    const [tabIndex, setTabIndex] = useState(props.options[0])\n    const options = props.options\n    const data = props.data\n    const xAxisTitles = props.xAxisTitles\n    const yAxisTitles = props.yAxisTitles\n    const { getRootProps, getRadioProps } = useRadioGroup({\n      name: 'framework',\n      defaultValue: props.options[0],\n      onChange: setTabIndex,\n    })\n    const group = getRootProps()\n  \n  return (\n\n      <Flex pt='2vh'>\n        <VStack pt='0px'>\n          <HStack alignItems='top'>\n            <VStack {...group} pl='1vw' pr='30px' pt='70px'>\n              {options.map((value) => {\n                const radio = getRadioProps({ value })\n                return (\n                  <RadioCard key={value} p={'0px'} width={'180px'} {...radio}>\n                    <Center>\n                    {value}\n                    </Center>\n                  </RadioCard>\n                )\n              })}\n            </VStack>\n            {options.map((value, index) => {\n              return (\n              value===tabIndex &&\n              (<MultiLine \n                data={data[index]} \n                height={0.75*windowSize.innerHeight} \n                width={0.75*windowSize.innerWidth} \n                min={15}\n                xAxisTitle={xAxisTitles[index]}\n                yAxisTitle={yAxisTitles[index]}\n              />)\n              )\n            })}\n          </HStack>\n        </VStack>\n      </Flex>\n\n\n  );\n};\n\nexport default TrendsBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}