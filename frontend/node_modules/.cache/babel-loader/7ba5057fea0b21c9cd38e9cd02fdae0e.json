{"ast":null,"code":"var _jsxFileName = \"/Users/zhangmin/Documents/GitHub/CombatIQ/frontend/src/pages/training/Stamina.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, ReactNode, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Center, Flex, Heading, HStack, Text, useRadioGroup, VStack } from \"@chakra-ui/react\";\nimport MultiLine from \"../../components/visualisations/MultiLine\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport RadioCard from \"../../components/radio/RadioCard\";\nimport SpeedData from \"../../dummy_data/training/speed.json\";\nimport PowerData from \"../../dummy_data/training/power.json\";\nimport AccuracyData from \"../../dummy_data/accuracy.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stamina = () => {\n  _s();\n  // Window size for graph size\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  function getWindowSize() {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  // For radio\n  const [tabIndex, setTabIndex] = useState('Speed');\n  const options = ['Speed', 'Power'];\n  const {\n    getRootProps,\n    getRadioProps\n  } = useRadioGroup({\n    name: 'framework',\n    defaultValue: 'Speed',\n    onChange: setTabIndex\n  });\n  const group = getRootProps();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    pt: \"5vh\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      pt: \"10px\",\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        alignItems: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(VStack, {\n          ...group,\n          pl: \"1vw\",\n          pr: \"30px\",\n          pt: \"70px\",\n          children: options.map(value => {\n            const radio = getRadioProps({\n              value\n            });\n            return /*#__PURE__*/_jsxDEV(RadioCard, {\n              p: '0px',\n              width: '150px',\n              ...radio,\n              children: /*#__PURE__*/_jsxDEV(Center, {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), tabIndex === 'Speed' && /*#__PURE__*/_jsxDEV(MultiLine, {\n          data: SpeedData,\n          height: 0.7 * windowSize.innerHeight,\n          width: 0.62 * windowSize.innerWidth,\n          min: 15,\n          xAxisTitle: 'Time (seconds)',\n          yAxisTitle: 'Speed (kph)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), tabIndex === 'Power' && /*#__PURE__*/_jsxDEV(MultiLine, {\n          data: PowerData,\n          height: 0.7 * windowSize.innerHeight,\n          width: 0.62 * windowSize.innerWidth,\n          min: 500,\n          xAxisTitle: ' Time (seconds)',\n          yAxisTitle: 'Power (psi)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n_s(Stamina, \"VseXhucA2+dcyko77ZsShmmA05E=\", false, function () {\n  return [useRadioGroup];\n});\n_c = Stamina;\nexport default Stamina;\nvar _c;\n$RefreshReg$(_c, \"Stamina\");","map":{"version":3,"names":["React","useEffect","useState","ReactNode","useRef","useLocation","Center","Flex","Heading","HStack","Text","useRadioGroup","VStack","MultiLine","Sidebar","RadioCard","SpeedData","PowerData","AccuracyData","Stamina","windowSize","setWindowSize","getWindowSize","innerWidth","innerHeight","window","handleWindowResize","addEventListener","removeEventListener","tabIndex","setTabIndex","options","getRootProps","getRadioProps","name","defaultValue","onChange","group","map","value","radio"],"sources":["/Users/zhangmin/Documents/GitHub/CombatIQ/frontend/src/pages/training/Stamina.jsx"],"sourcesContent":["import React, { useEffect, useState, ReactNode, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  Text,\n  useRadioGroup,\n  VStack,\n} from \"@chakra-ui/react\";\nimport MultiLine from \"../../components/visualisations/MultiLine\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport RadioCard from \"../../components/radio/RadioCard\";\nimport SpeedData from \"../../dummy_data/training/speed.json\";\nimport PowerData from \"../../dummy_data/training/power.json\";\nimport AccuracyData from \"../../dummy_data/accuracy.json\";\n\nconst Stamina = () => {\n    // Window size for graph size\n    const [windowSize, setWindowSize] = useState(getWindowSize());\n    function getWindowSize() {\n      const {innerWidth, innerHeight} = window;\n      return {innerWidth, innerHeight};\n    }\n    useEffect(() => {\n      function handleWindowResize() {\n        setWindowSize(getWindowSize());\n      }\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }, []);\n\n    // For radio\n    const [tabIndex, setTabIndex] = useState('Speed')\n    const options = ['Speed', 'Power']\n    const { getRootProps, getRadioProps } = useRadioGroup({\n      name: 'framework',\n      defaultValue: 'Speed',\n      onChange: setTabIndex,\n    })\n    const group = getRootProps()\n  \n  return (\n\n      <Flex pt='5vh'>\n        <VStack pt='10px'>\n          <HStack alignItems='top'>\n            <VStack {...group} pl='1vw' pr='30px' pt='70px'>\n              {options.map((value) => {\n                const radio = getRadioProps({ value })\n                return (\n                  <RadioCard key={value} p={'0px'} width={'150px'} {...radio}>\n                    <Center>\n                    {value}\n                    </Center>\n                  </RadioCard>\n                )\n              })}\n            </VStack>\n            {tabIndex==='Speed' && \n            <MultiLine \n              data={SpeedData} \n              height={0.7*windowSize.innerHeight} \n              width={0.62*windowSize.innerWidth} \n              min={15}\n              xAxisTitle={'Time (seconds)'}\n              yAxisTitle={'Speed (kph)'}\n            />\n            }\n            {tabIndex==='Power' &&\n            <MultiLine \n              data={PowerData} \n              height={0.7*windowSize.innerHeight} \n              width={0.62*windowSize.innerWidth} \n              min={500}\n              xAxisTitle={' Time (seconds)'}\n              yAxisTitle={'Power (psi)'}\n            />\n            }\n          </HStack>\n        </VStack>\n      </Flex>\n\n\n  );\n};\n\nexport default Stamina;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}